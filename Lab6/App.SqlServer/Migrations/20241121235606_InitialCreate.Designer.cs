// <auto-generated />
using System;
using App.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.SqlServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241121235606_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.Models.CustomerLoyalty", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFirstPurchase")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastPurchase")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherLoyaltyDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerLoyalty");
                });

            modelBuilder.Entity("App.Models.CustomerPreference", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FactorCode")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "FactorCode");

                    b.HasIndex("FactorCode");

                    b.ToTable("CustomerPreference");
                });

            modelBuilder.Entity("App.Models.CustomerProfile", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerProfile");
                });

            modelBuilder.Entity("App.Models.HouseholdMember", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("CountOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("CountOfWageEarners")
                        .HasColumnType("int");

                    b.Property<int>("MemberCount")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("HouseholdMember");
                });

            modelBuilder.Entity("App.Models.RefPreferenceFactor", b =>
                {
                    b.Property<int>("FactorCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactorCode"));

                    b.Property<string>("FactorDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FactorCode");

                    b.ToTable("RefPreferenceFactor");
                });

            modelBuilder.Entity("App.Models.CustomerLoyalty", b =>
                {
                    b.HasOne("App.Models.CustomerProfile", "Customer")
                        .WithMany("CustomerLoyalties")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("App.Models.CustomerPreference", b =>
                {
                    b.HasOne("App.Models.CustomerProfile", "Customer")
                        .WithMany("CustomerPreferences")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Models.RefPreferenceFactor", "RefPreferenceFactor")
                        .WithMany("CustomerPreferences")
                        .HasForeignKey("FactorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RefPreferenceFactor");
                });

            modelBuilder.Entity("App.Models.HouseholdMember", b =>
                {
                    b.HasOne("App.Models.CustomerProfile", "Customer")
                        .WithMany("HouseholdMembers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("App.Models.CustomerProfile", b =>
                {
                    b.Navigation("CustomerLoyalties");

                    b.Navigation("CustomerPreferences");

                    b.Navigation("HouseholdMembers");
                });

            modelBuilder.Entity("App.Models.RefPreferenceFactor", b =>
                {
                    b.Navigation("CustomerPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
